!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADDON_MESSAGE_CODE	src/util/jpeg2bmp/cderror.h	/^} ADDON_MESSAGE_CODE;$/;"	t	typeref:enum:__anon3
B2P_TRANSPARENT_NONE	src/util/bmp_png/bmp2png.c	22;"	d	file:
B2P_TRANSPARENT_PALETTE	src/util/bmp_png/bmp2png.c	24;"	d	file:
B2P_TRANSPARENT_RGB	src/util/bmp_png/bmp2png.c	23;"	d	file:
B4H_DALPHAMASK	src/util/bmp_png/bmphed.h	39;"	d
B4H_DBLUEMASK	src/util/bmp_png/bmphed.h	38;"	d
B4H_DCSTYPE	src/util/bmp_png/bmphed.h	40;"	d
B4H_DGAMMABLUE	src/util/bmp_png/bmphed.h	44;"	d
B4H_DGAMMAGREEN	src/util/bmp_png/bmphed.h	43;"	d
B4H_DGAMMARED	src/util/bmp_png/bmphed.h	42;"	d
B4H_DGREENMASK	src/util/bmp_png/bmphed.h	37;"	d
B4H_DREDMASK	src/util/bmp_png/bmphed.h	36;"	d
B4H_XENDPOINTS	src/util/bmp_png/bmphed.h	41;"	d
B5H_DINTENT	src/util/bmp_png/bmphed.h	45;"	d
B5H_DPROFILEDATA	src/util/bmp_png/bmphed.h	46;"	d
B5H_DPROFILESIZE	src/util/bmp_png/bmphed.h	47;"	d
B5H_DRESERVED	src/util/bmp_png/bmphed.h	48;"	d
BCH_DSIZE	src/util/bmp_png/bmphed.h	54;"	d
BCH_WBITCOUNT	src/util/bmp_png/bmphed.h	58;"	d
BCH_WHEIGHT	src/util/bmp_png/bmphed.h	56;"	d
BCH_WPLANES	src/util/bmp_png/bmphed.h	57;"	d
BCH_WWIDTH	src/util/bmp_png/bmphed.h	55;"	d
BFH_DBIHSIZE	src/util/bmp_png/bmphed.h	20;"	d
BFH_DOFFBITS	src/util/bmp_png/bmphed.h	19;"	d
BFH_DSIZE	src/util/bmp_png/bmphed.h	16;"	d
BFH_WRESERVED1	src/util/bmp_png/bmphed.h	17;"	d
BFH_WRESERVED2	src/util/bmp_png/bmphed.h	18;"	d
BFH_WTYPE	src/util/bmp_png/bmphed.h	15;"	d
BIHSIZE_SIZE	src/util/bmp_png/bmphed.h	22;"	d
BIH_DCLRIMPORANT	src/util/bmp_png/bmphed.h	35;"	d
BIH_DCLRUSED	src/util/bmp_png/bmphed.h	34;"	d
BIH_DCOMPRESSION	src/util/bmp_png/bmphed.h	30;"	d
BIH_DSIZE	src/util/bmp_png/bmphed.h	25;"	d
BIH_DSIZEIMAGE	src/util/bmp_png/bmphed.h	31;"	d
BIH_LHEIGHT	src/util/bmp_png/bmphed.h	27;"	d
BIH_LWIDTH	src/util/bmp_png/bmphed.h	26;"	d
BIH_LXPELSPERMETER	src/util/bmp_png/bmphed.h	32;"	d
BIH_LYPELSPERMETER	src/util/bmp_png/bmphed.h	33;"	d
BIH_WBITCOUNT	src/util/bmp_png/bmphed.h	29;"	d
BIH_WPLANES	src/util/bmp_png/bmphed.h	28;"	d
BINSTDIO_SETMODE	src/util/bmp_png/common.h	71;"	d
BI_BITFIELDS	src/util/bmp_png/bmphed.h	79;"	d
BI_JPEG	src/util/bmp_png/bmphed.h	80;"	d
BI_PNG	src/util/bmp_png/bmphed.h	81;"	d
BI_RGB	src/g_save.c	187;"	d	file:
BI_RGB	src/util/bmp_png/bmphed.h	76;"	d
BI_RLE4	src/util/bmp_png/bmphed.h	78;"	d
BI_RLE8	src/util/bmp_png/bmphed.h	77;"	d
BMP	inc/g_pixbuf.h	/^	BMP,$/;"	e	enum:__anon1
BMP2PNG_COPYRIGHT	src/util/bmp_png/bmp2png.c	13;"	d	file:
BMP2PNG_VERSION	src/util/bmp_png/bmp2png.c	12;"	d	file:
BMPHED_H	src/util/bmp_png/bmphed.h	8;"	d
BMPV4HED_SIZE	src/util/bmp_png/bmphed.h	50;"	d
BMPV5HED_SIZE	src/util/bmp_png/bmphed.h	51;"	d
BMP_SIGNATURE	src/util/bmp_png/bmphed.h	11;"	d
BMP_SIG_BYTES	src/util/bmp_png/bmphed.h	12;"	d
BOOL	src/util/bmp_png/common.h	/^typedef enum { FALSE = 0, TRUE = 1 } BOOL;$/;"	t	typeref:enum:__anon4
BYTE	src/util/bmp_png/common.h	/^typedef unsigned char  BYTE;$/;"	t
CDERROR_H	src/util/jpeg2bmp/cderror.h	23;"	d
CDJPEG_H	src/util/jpeg2bmp/cdjpeg.h	12;"	d
CHAR	src/util/bmp_png/common.h	/^typedef char           CHAR;$/;"	t
COMMON_H	src/util/bmp_png/common.h	18;"	d
COREHED_SIZE	src/util/bmp_png/bmphed.h	59;"	d
DRIVESUFFIX	src/util/bmp_png/common.h	122;"	d
DWORD	src/util/bmp_png/common.h	/^typedef unsigned long  DWORD;$/;"	t
ERREXIT	src/util/jpeg2bmp/jerror.h	206;"	d
ERREXIT1	src/util/jpeg2bmp/jerror.h	209;"	d
ERREXIT2	src/util/jpeg2bmp/jerror.h	213;"	d
ERREXIT3	src/util/jpeg2bmp/jerror.h	218;"	d
ERREXIT4	src/util/jpeg2bmp/jerror.h	224;"	d
ERREXITS	src/util/jpeg2bmp/jerror.h	231;"	d
ERROR_ABORT	src/util/bmp_png/bmp2png.c	155;"	d	file:
ERROR_ABORT	src/util/bmp_png/png2bmp.c	60;"	d	file:
EXIT_FAILURE	src/util/jpeg2bmp/cdjpeg.h	131;"	d
EXIT_SUCCESS	src/util/jpeg2bmp/cdjpeg.h	135;"	d
EXIT_SUCCESS	src/util/jpeg2bmp/cdjpeg.h	137;"	d
EXIT_WARNING	src/util/jpeg2bmp/cdjpeg.h	142;"	d
EXIT_WARNING	src/util/jpeg2bmp/cdjpeg.h	144;"	d
FALSE	src/util/bmp_png/common.h	/^typedef enum { FALSE = 0, TRUE = 1 } BOOL;$/;"	e	enum:__anon4
FILEHED_SIZE	src/util/bmp_png/bmphed.h	21;"	d
FUNC	src/util/list/list.h	/^typedef void (*FUNC)(void *data, void *usr_data);$/;"	t
GList	src/util/list/list.h	/^}GList;$/;"	t	typeref:struct:_GList
GPixbuf	inc/g_pixbuf.h	/^}GPixbuf;$/;"	t	typeref:struct:_GPixbuf
ICO	inc/g_pixbuf.h	/^	ICO,$/;"	e	enum:__anon1
IMAGE	src/util/bmp_png/common.h	/^} IMAGE;$/;"	t	typeref:struct:tagIMAGE
IMAX	src/shot.c	13;"	d	file:
IMIN	src/shot.c	14;"	d	file:
INFOHED_SIZE	src/util/bmp_png/bmphed.h	49;"	d
INT	src/util/bmp_png/common.h	/^typedef int            INT;$/;"	t
IconEntry	src/g_save.c	/^typedef struct _IconEntry IconEntry;$/;"	t	typeref:struct:_IconEntry	file:
IsDBCSLead	src/util/bmp_png/common.h	126;"	d
IsDBCSLead	src/util/bmp_png/common.h	128;"	d
IsDBCSLead	src/util/bmp_png/common.h	134;"	d
IsOptChar	src/util/bmp_png/common.h	124;"	d
IsOptChar	src/util/bmp_png/common.h	133;"	d
IsPathDelim	src/util/bmp_png/common.h	123;"	d
IsPathDelim	src/util/bmp_png/common.h	132;"	d
JERROR_H	src/util/jpeg2bmp/jerror.h	200;"	d
JFREAD	src/util/jpeg2bmp/cdjpeg.h	25;"	d
JFWRITE	src/util/jpeg2bmp/cdjpeg.h	27;"	d
JMAKE_ENUM_LIST	src/util/jpeg2bmp/cderror.h	129;"	d
JMAKE_ENUM_LIST	src/util/jpeg2bmp/cderror.h	25;"	d
JMAKE_ENUM_LIST	src/util/jpeg2bmp/jerror.h	192;"	d
JMAKE_ENUM_LIST	src/util/jpeg2bmp/jerror.h	25;"	d
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_BAD_CMAP_FILE,$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_BMP_BADCMAP, "Unsupported BMP colormap format")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_BMP_BADDEPTH, "Only 8- and 24-bit BMP files are supported")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_BMP_BADHEADER, "Invalid BMP file: bad header length")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_BMP_BADPLANES, "Invalid BMP file: biPlanes not equal to 1")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_BMP_COLORSPACE, "BMP output must be grayscale or RGB")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_BMP_COMPRESSED, "Sorry, compressed BMPs not yet supported")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_BMP_NOT, "Not a BMP file - does not start with BM")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_GIF_BUG, "GIF output got confused")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_GIF_CODESIZE, "Bogus GIF codesize %d")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_GIF_COLORSPACE, "GIF output must be grayscale or RGB")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_GIF_IMAGENOTFOUND, "Too few images in GIF file")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_GIF_NOT, "Not a GIF file")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_PPM_COLORSPACE, "PPM output must be grayscale or RGB")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_PPM_NONNUMERIC, "Nonnumeric data in PPM file")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_PPM_NOT, "Not a PPM\/PGM file")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_RLE_BADERROR, "Bogus error code from RLE library")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_RLE_COLORSPACE, "RLE output must be grayscale or RGB")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_RLE_DIMENSIONS, "Image dimensions (%ux%u) too large for RLE")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_RLE_EMPTY, "Empty RLE file")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_RLE_EOF, "Premature EOF in RLE header")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_RLE_MEM, "Insufficient memory for RLE header")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_RLE_NOT, "Not an RLE file")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_RLE_TOOMANYCHANNELS, "Cannot handle %d output channels for RLE")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_RLE_UNSUPPORTED, "Cannot handle this RLE setup")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_TGA_BADCMAP, "Unsupported Targa colormap format")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_TGA_BADPARMS, "Invalid or unsupported Targa file")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_TGA_COLORSPACE, "Targa output must be grayscale or RGB")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_TOO_MANY_COLORS,$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_UNGETC_FAILED, "ungetc failed")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_UNKNOWN_FORMAT,$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JERR_UNSUPPORTED_FORMAT, "Unsupported output file format")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JMSG_FIRSTADDONCODE=1000, NULL) \/* Must be first entry! *\/$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_BMP, "%ux%u 24-bit BMP image")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_BMP_MAPPED, "%ux%u 8-bit colormapped BMP image")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_BMP_OS2, "%ux%u 24-bit OS2 BMP image")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_BMP_OS2_MAPPED, "%ux%u 8-bit colormapped OS2 BMP image")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_GIF, "%ux%ux%d GIF image")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_GIF_BADVERSION,$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_GIF_EXTENSION, "Ignoring GIF extension block of type 0x%02x")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_GIF_NONSQUARE, "Caution: nonsquare pixels in input")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_PGM, "%ux%u PGM image")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_PGM_TEXT, "%ux%u text PGM image")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_PPM, "%ux%u PPM image")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_PPM_TEXT, "%ux%u text PPM image")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_RLE, "%ux%u full-color RLE file")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_RLE_FULLMAP, "%ux%u full-color RLE file with map of length %d")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_RLE_GRAY, "%ux%u grayscale RLE file")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_RLE_MAPGRAY, "%ux%u grayscale RLE file with map of length %d")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_RLE_MAPPED, "%ux%u colormapped RLE file with map of length %d")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_TGA, "%ux%u RGB Targa image")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_TGA_GRAY, "%ux%u grayscale Targa image")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JTRC_TGA_MAPPED, "%ux%u colormapped Targa image")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JWRN_GIF_BADDATA, "Corrupt data in GIF file")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JWRN_GIF_CHAR, "Bogus char 0x%02x in GIF file, ignoring")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JWRN_GIF_ENDCODE, "Premature end of GIF image")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	/^JMESSAGE(JWRN_GIF_NOMOREDATA, "Ran out of GIF bits")$/;"	e	enum:__anon3
JMESSAGE	src/util/jpeg2bmp/cderror.h	133;"	d
JMESSAGE	src/util/jpeg2bmp/cderror.h	28;"	d
JMESSAGE	src/util/jpeg2bmp/cderror.h	36;"	d
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_ARITH_NOTIMPL,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_ALIGN_TYPE, "ALIGN_TYPE is wrong, please fix")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_ALLOC_CHUNK, "MAX_ALLOC_CHUNK is wrong, please fix")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_BUFFER_MODE, "Bogus buffer control mode")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_COMPONENT_ID, "Invalid component ID %d in SOS")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_DCTSIZE, "IDCT output block size %d not supported")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_DCT_COEF, "DCT coefficient out of range")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_HUFF_TABLE, "Bogus Huffman table definition")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_IN_COLORSPACE, "Bogus input colorspace")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_J_COLORSPACE, "Bogus JPEG colorspace")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_LENGTH, "Bogus marker length")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_LIB_VERSION,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_MCU_SIZE, "Sampling factors too large for interleaved scan")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_POOL_ID, "Invalid memory pool code %d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_PRECISION, "Unsupported JPEG data precision %d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_PROGRESSION,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_PROG_SCRIPT,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_SAMPLING, "Bogus sampling factors")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_SCAN_SCRIPT, "Invalid scan script at entry %d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_STATE, "Improper call to JPEG library in state %d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_STRUCT_SIZE,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BAD_VIRTUAL_ACCESS, "Bogus virtual array access")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_BUFFER_SIZE, "Buffer passed to JPEG library is too small")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_CANT_SUSPEND, "Suspension not allowed here")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_CCIR601_NOTIMPL, "CCIR601 sampling not implemented yet")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_COMPONENT_COUNT, "Too many color components: %d, max %d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_CONVERSION_NOTIMPL, "Unsupported color conversion request")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_DAC_INDEX, "Bogus DAC index %d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_DAC_VALUE, "Bogus DAC value 0x%x")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_DHT_INDEX, "Bogus DHT index %d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_DQT_INDEX, "Bogus DQT index %d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_EMPTY_IMAGE, "Empty JPEG image (DNL not supported)")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_EMS_READ, "Read from EMS failed")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_EMS_WRITE, "Write to EMS failed")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_EOI_EXPECTED, "Didn't expect more than one scan")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_FILE_READ, "Input file read error")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_FILE_WRITE, "Output file write error --- out of disk space?")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_FRACT_SAMPLE_NOTIMPL, "Fractional sampling not implemented yet")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_HUFF_CLEN_OVERFLOW, "Huffman code size table overflow")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_HUFF_MISSING_CODE, "Missing Huffman code table entry")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_IMAGE_TOO_BIG, "Maximum supported image dimension is %u pixels")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_INPUT_EMPTY, "Empty input file")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_INPUT_EOF, "Premature end of input file")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_MISMATCHED_QUANT_TABLE,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_MISSING_DATA, "Scan script does not transmit all data")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_MODE_CHANGE, "Invalid color quantization mode change")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_NOTIMPL, "Not implemented yet")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_NOT_COMPILED, "Requested feature was omitted at compile time")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_NO_BACKING_STORE, "Backing store not supported")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_NO_HUFF_TABLE, "Huffman table 0x%02x was not defined")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_NO_IMAGE, "JPEG datastream contains no image")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_NO_QUANT_TABLE, "Quantization table 0x%02x was not defined")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_NO_SOI, "Not a JPEG file: starts with 0x%02x 0x%02x")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_OUT_OF_MEMORY, "Insufficient memory (case %d)")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_QUANT_COMPONENTS,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_QUANT_FEW_COLORS, "Cannot quantize to fewer than %d colors")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_QUANT_MANY_COLORS, "Cannot quantize to more than %d colors")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_SOF_DUPLICATE, "Invalid JPEG file structure: two SOF markers")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_SOF_NO_SOS, "Invalid JPEG file structure: missing SOS marker")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_SOF_UNSUPPORTED, "Unsupported JPEG process: SOF type 0x%02x")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_SOI_DUPLICATE, "Invalid JPEG file structure: two SOI markers")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_SOS_NO_SOF, "Invalid JPEG file structure: SOS before SOF")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_TFILE_CREATE, "Failed to create temporary file %s")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_TFILE_READ, "Read failed on temporary file")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_TFILE_SEEK, "Seek failed on temporary file")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_TFILE_WRITE,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_TOO_LITTLE_DATA, "Application transferred too few scanlines")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_UNKNOWN_MARKER, "Unsupported marker type 0x%02x")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_VIRTUAL_BUG, "Virtual array controller messed up")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_WIDTH_OVERFLOW, "Image too wide for this implementation")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_XMS_READ, "Read from XMS failed")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JERR_XMS_WRITE, "Write to XMS failed")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JMSG_COPYRIGHT, JCOPYRIGHT)$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JMSG_NOMESSAGE, "Bogus message code %d") \/* Must be first entry! *\/$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JMSG_VERSION, JVERSION)$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_16BIT_TABLES,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_ADOBE,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_APP0, "Unknown APP0 marker (not JFIF), length %u")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_APP14, "Unknown APP14 marker (not Adobe), length %u")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_DAC, "Define Arithmetic Table 0x%02x: 0x%02x")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_DHT, "Define Huffman Table 0x%02x")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_DQT, "Define Quantization Table %d  precision %d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_DRI, "Define Restart Interval %u")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_EMS_CLOSE, "Freed EMS handle %u")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_EMS_OPEN, "Obtained EMS handle %u")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_EOI, "End Of Image")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_HUFFBITS, "        %3d %3d %3d %3d %3d %3d %3d %3d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_JFIF, "JFIF APP0 marker: version %d.%02d, density %dx%d  %d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_JFIF_BADTHUMBNAILSIZE,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_JFIF_EXTENSION,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_JFIF_THUMBNAIL, "    with %d x %d thumbnail image")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_MISC_MARKER, "Miscellaneous marker 0x%02x, length %u")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_PARMLESS_MARKER, "Unexpected marker 0x%02x")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_QUANTVALS, "        %4u %4u %4u %4u %4u %4u %4u %4u")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_QUANT_3_NCOLORS, "Quantizing to %d = %d*%d*%d colors")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_QUANT_NCOLORS, "Quantizing to %d colors")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_QUANT_SELECTED, "Selected %d colors for quantization")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_RECOVERY_ACTION, "At marker 0x%02x, recovery action %d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_RST, "RST%d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_SMOOTH_NOTIMPL,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_SOF, "Start Of Frame 0x%02x: width=%u, height=%u, components=%d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_SOF_COMPONENT, "    Component %d: %dhx%dv q=%d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_SOI, "Start of Image")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_SOS, "Start Of Scan: %d components")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_SOS_COMPONENT, "    Component %d: dc=%d ac=%d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_SOS_PARAMS, "  Ss=%d, Se=%d, Ah=%d, Al=%d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_TFILE_CLOSE, "Closed temporary file %s")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_TFILE_OPEN, "Opened temporary file %s")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_THUMB_JPEG,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_THUMB_PALETTE,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_THUMB_RGB,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_UNKNOWN_IDS,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_XMS_CLOSE, "Freed XMS handle %u")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JTRC_XMS_OPEN, "Obtained XMS handle %u")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JWRN_ADOBE_XFORM, "Unknown Adobe color transform code %d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JWRN_BOGUS_PROGRESSION,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JWRN_EXTRANEOUS_DATA,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JWRN_HIT_MARKER, "Corrupt JPEG data: premature end of data segment")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JWRN_HUFF_BAD_CODE, "Corrupt JPEG data: bad Huffman code")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JWRN_JFIF_MAJOR, "Warning: unknown JFIF revision number %d.%02d")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JWRN_JPEG_EOF, "Premature end of JPEG file")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JWRN_MUST_RESYNC,$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JWRN_NOT_SEQUENTIAL, "Invalid SOS parameters for sequential JPEG")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	/^JMESSAGE(JWRN_TOO_MUCH_DATA, "Application transferred too many scanlines")$/;"	e	enum:__anon2
JMESSAGE	src/util/jpeg2bmp/jerror.h	196;"	d
JMESSAGE	src/util/jpeg2bmp/jerror.h	28;"	d
JMESSAGE	src/util/jpeg2bmp/jerror.h	36;"	d
JMSG_LASTADDONCODE	src/util/jpeg2bmp/cderror.h	/^  JMSG_LASTADDONCODE$/;"	e	enum:__anon3
JMSG_LASTMSGCODE	src/util/jpeg2bmp/jerror.h	/^  JMSG_LASTMSGCODE$/;"	e	enum:__anon2
JPEG	inc/g_pixbuf.h	/^	JPEG$/;"	e	enum:__anon1
JPEG_CJPEG_DJPEG	src/util/jpeg2bmp/cdjpeg.h	14;"	d
JPEG_INTERNAL_OPTIONS	src/util/jpeg2bmp/cdjpeg.h	15;"	d
JPG	inc/g_pixbuf.h	/^	JPG,$/;"	e	enum:__anon1
J_MESSAGE_CODE	src/util/jpeg2bmp/jerror.h	/^} J_MESSAGE_CODE;$/;"	t	typeref:enum:__anon2
LINE_LEN	src/util/bmp_png/common.c	40;"	d	file:
LITTLE	inc/g_def.h	12;"	d
LONG	src/util/bmp_png/common.h	/^typedef long           LONG;$/;"	t
MAKESTMT	src/util/jpeg2bmp/jerror.h	236;"	d
MASK	src/shot.c	153;"	d	file:
MEMZERO	src/util/jpeg2bmp/cdjpeg.h	24;"	d
MKDIR	src/util/bmp_png/common.h	54;"	d
MKDIR	src/util/bmp_png/common.h	56;"	d
MKDIR	src/util/bmp_png/common.h	64;"	d
MSDOS	src/util/bmp_png/common.h	109;"	d
MSDOS	src/util/bmp_png/common.h	113;"	d
MWMHints	src/shot.c	/^}MWMHints;$/;"	t	typeref:struct:_mwmhints	file:
MWM_HINTS_DECORATIONS	src/shot.c	10;"	d	file:
P2B_ALPHABMP_ARGB	src/util/bmp_png/png2bmp.c	21;"	d	file:
P2B_ALPHABMP_BITFIELD	src/util/bmp_png/png2bmp.c	22;"	d	file:
P2B_ALPHABMP_NONE	src/util/bmp_png/png2bmp.c	20;"	d	file:
PALETTE	src/util/bmp_png/common.h	/^typedef png_color PALETTE;$/;"	t
PATHDELIM	src/util/bmp_png/common.h	121;"	d
PATHDELIM	src/util/bmp_png/common.h	131;"	d
PNG	inc/g_pixbuf.h	/^	PNG,$/;"	e	enum:__anon1
PNG2BMP_COPYRIGHT	src/util/bmp_png/png2bmp.c	15;"	d	file:
PNG2BMP_VERSION	src/util/bmp_png/png2bmp.c	14;"	d	file:
PROGBAR_MAX	src/util/bmp_png/common.c	42;"	d	file:
PROP_MWM_HINTS_ELEMENTS	src/shot.c	11;"	d	file:
PUT_2B	src/util/jpeg2bmp/djpeg.c	246;"	d	file:
PUT_4B	src/util/jpeg2bmp/djpeg.c	249;"	d	file:
READ_BINARY	src/util/jpeg2bmp/cdjpeg.h	118;"	d
READ_BINARY	src/util/jpeg2bmp/cdjpeg.h	122;"	d
READ_BINARY	src/util/jpeg2bmp/cdjpeg.h	125;"	d
RGBQUAD_SIZE	src/util/bmp_png/bmphed.h	66;"	d
RGBQ_BLUE	src/util/bmp_png/bmphed.h	62;"	d
RGBQ_GREEN	src/util/bmp_png/bmphed.h	63;"	d
RGBQ_RED	src/util/bmp_png/bmphed.h	64;"	d
RGBQ_RESERVED	src/util/bmp_png/bmphed.h	65;"	d
RGBTRIPLE_SIZE	src/util/bmp_png/bmphed.h	72;"	d
RGBT_BLUE	src/util/bmp_png/bmphed.h	69;"	d
RGBT_GREEN	src/util/bmp_png/bmphed.h	70;"	d
RGBT_RED	src/util/bmp_png/bmphed.h	71;"	d
SHORT	src/util/bmp_png/common.h	/^typedef short          SHORT;$/;"	t
SIZEOF	src/util/jpeg2bmp/cdjpeg.h	23;"	d
SJ_ESC	src/util/bmp_png/png2bmp.c	434;"	d	file:
STATUS_LEN	src/util/bmp_png/common.c	41;"	d	file:
TIFF0	inc/g_pixbuf.h	/^	TIFF0,$/;"	e	enum:__anon1
TRACEMS	src/util/jpeg2bmp/jerror.h	253;"	d
TRACEMS1	src/util/jpeg2bmp/jerror.h	256;"	d
TRACEMS2	src/util/jpeg2bmp/jerror.h	260;"	d
TRACEMS3	src/util/jpeg2bmp/jerror.h	265;"	d
TRACEMS4	src/util/jpeg2bmp/jerror.h	270;"	d
TRACEMS5	src/util/jpeg2bmp/jerror.h	275;"	d
TRACEMS8	src/util/jpeg2bmp/jerror.h	281;"	d
TRACEMSS	src/util/jpeg2bmp/jerror.h	287;"	d
TRUE	src/util/bmp_png/common.h	/^typedef enum { FALSE = 0, TRUE = 1 } BOOL;$/;"	e	enum:__anon4
TiffSaveContext	src/g_save.c	/^} TiffSaveContext;$/;"	t	typeref:struct:_TiffSaveContent	file:
UINT	src/util/bmp_png/common.h	/^typedef unsigned int   UINT;$/;"	t
UINT16_TO_LE	src/g_save.c	190;"	d	file:
UINT32_TO_LE	src/g_save.c	194;"	d	file:
WARNMS	src/util/jpeg2bmp/jerror.h	239;"	d
WARNMS1	src/util/jpeg2bmp/jerror.h	242;"	d
WARNMS2	src/util/jpeg2bmp/jerror.h	246;"	d
WIN32	src/util/bmp_png/common.h	106;"	d
WIN32	src/util/bmp_png/common.h	112;"	d
WIN32_LFN	src/util/bmp_png/common.h	117;"	d
WORD	src/util/bmp_png/common.h	/^typedef unsigned short WORD;$/;"	t
WRITE_BINARY	src/util/jpeg2bmp/cdjpeg.h	119;"	d
WRITE_BINARY	src/util/jpeg2bmp/cdjpeg.h	123;"	d
WRITE_BINARY	src/util/jpeg2bmp/cdjpeg.h	126;"	d
XrmInitialize	configure	/^XrmInitialize ()$/;"	f
_BMP_PNG_H	src/util/bmp_png/bmp_png.h	2;"	d
_GG_LIST_H	src/util/list/list.h	2;"	d
_GList	src/util/list/list.h	/^typedef struct _GList {$/;"	s
_GPixbuf	inc/g_pixbuf.h	/^typedef struct _GPixbuf {$/;"	s
_G_DEF_H	inc/g_def.h	2;"	d
_G_PIXBUF_H	inc/g_pixbuf.h	2;"	d
_IconEntry	src/g_save.c	/^struct _IconEntry {$/;"	s	file:
_TRANSFORM_H	inc/transform.h	2;"	d
_TiffSaveContent	src/g_save.c	/^typedef struct _TiffSaveContent{$/;"	s	file:
_argv_expand_fnc	src/util/bmp_png/common.c	/^typedef void _RTLENTRY (* _RTLENTRY _argv_expand_fnc)(char *, _PFN_ADDARG);$/;"	t	file:
_argv_expand_ptr	src/util/bmp_png/common.c	/^_argv_expand_fnc  _argv_expand_ptr  = _expand_wild;		\/* expand wild cards *\/$/;"	v
_bmp_dest_struct_	src/util/jpeg2bmp/djpeg.c	/^typedef struct _bmp_dest_struct_{$/;"	s	file:
_crt0_startup_flags	src/util/bmp_png/common.c	/^int _crt0_startup_flags = _CRT0_FLAG_DISALLOW_RESPONSE_FILES;$/;"	v
_djstat_flags	src/util/bmp_png/common.c	/^unsigned short _djstat_flags =	\/* for stat() *\/$/;"	v
_g_list_alloc	src/util/list/list.c	/^static inline GList *_g_list_alloc()$/;"	f	file:
_mwmhints	src/shot.c	/^typedef struct _mwmhints{$/;"	s	file:
_wargv_expand_fnc	src/util/bmp_png/common.c	/^typedef void _RTLENTRY (* _RTLENTRY _wargv_expand_fnc)(wchar_t *, _PFN_ADDARG);$/;"	t	file:
_wargv_expand_ptr	src/util/bmp_png/common.c	/^_wargv_expand_fnc _wargv_expand_ptr = _wexpand_wild;$/;"	v
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_find_intX_t	configure	/^ac_fn_c_find_intX_t ()$/;"	f
ac_fn_c_find_uintX_t	configure	/^ac_fn_c_find_uintX_t ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
addslash	src/util/bmp_png/common.c	/^char *addslash(char *path)$/;"	f
allocated	src/g_save.c	/^        unsigned int allocated;$/;"	m	struct:_TiffSaveContent	file:
alpha	src/util/bmp_png/common.h	/^	BOOL    alpha;$/;"	m	struct:tagIMAGE
alpha_bmp	src/util/bmp_png/bmp2png.c	/^int  alpha_bmp = 0;$/;"	v
alpha_format	src/util/bmp_png/png2bmp.c	/^int alpha_format = P2B_ALPHABMP_NONE;$/;"	v
and	src/g_save.c	/^	unsigned char *and;$/;"	m	struct:_IconEntry	file:
and_rowstride	src/g_save.c	/^	unsigned int and_rowstride;$/;"	m	struct:_IconEntry	file:
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
barlen	src/util/bmp_png/common.c	/^static int         barlen;$/;"	v	file:
basname	src/util/bmp_png/common.c	/^char *basname(const char *path)$/;"	f
binary_stdio	src/util/bmp_png/common.c	/^FILE *binary_stdio(int fd)$/;"	f
bits_per_sample	inc/g_pixbuf.h	/^    int bits_per_sample;$/;"	m	struct:_GPixbuf
bmp2png	src/util/bmp_png/bmp2png.c	/^int bmp2png(char *in, char *out)$/;"	f
bmp_dest_ptr	src/util/jpeg2bmp/djpeg.c	/^typedef bmp_dest_struct * bmp_dest_ptr;$/;"	t	file:
bmp_dest_struct	src/util/jpeg2bmp/djpeg.c	/^} bmp_dest_struct;$/;"	t	typeref:struct:_bmp_dest_struct_	file:
bmpbits	src/util/bmp_png/common.h	/^	BYTE    *bmpbits;$/;"	m	struct:tagIMAGE
buffer	src/g_save.c	/^        char *buffer;$/;"	m	struct:_TiffSaveContent	file:
buffer	src/util/jpeg2bmp/cdjpeg.h	/^  JSAMPARRAY buffer;$/;"	m	struct:cjpeg_source_struct
buffer	src/util/jpeg2bmp/cdjpeg.h	/^  JSAMPARRAY buffer;$/;"	m	struct:djpeg_dest_struct
buffer_height	src/util/jpeg2bmp/cdjpeg.h	/^  JDIMENSION buffer_height;$/;"	m	struct:cjpeg_source_struct
buffer_height	src/util/jpeg2bmp/cdjpeg.h	/^  JDIMENSION buffer_height;$/;"	m	struct:djpeg_dest_struct
byte_order	inc/g_pixbuf.h	/^	int byte_order;$/;"	m	struct:_GPixbuf
bytes_per_line	inc/g_pixbuf.h	/^	int bytes_per_line;$/;"	m	struct:_GPixbuf
cd_progress_ptr	src/util/jpeg2bmp/cdjpeg.h	/^typedef struct cdjpeg_progress_mgr * cd_progress_ptr;$/;"	t	typeref:struct:cdjpeg_progress_mgr
cdjpeg_progress_mgr	src/util/jpeg2bmp/cdjpeg.h	/^struct cdjpeg_progress_mgr {$/;"	s
cfunc	src/pixbuf.c	/^typedef void (* cfunc) (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *cmap);$/;"	t	file:
changeCursor	src/shot.c	/^static void changeCursor(Display *display, Window window)$/;"	f	file:
cjpeg_source_ptr	src/util/jpeg2bmp/cdjpeg.h	/^typedef struct cjpeg_source_struct * cjpeg_source_ptr;$/;"	t	typeref:struct:cjpeg_source_struct
cjpeg_source_struct	src/util/jpeg2bmp/cdjpeg.h	/^struct cjpeg_source_struct {$/;"	s
clear_line	src/util/bmp_png/common.c	/^static void clear_line(void)$/;"	f	file:
colormap	src/pixbuf.c	/^	Colormap colormap;$/;"	m	struct:xlib_colormap_struct	file:
colors	src/g_save.c	/^	unsigned int *colors;$/;"	m	struct:_IconEntry	file:
colors	src/pixbuf.c	/^	XColor *colors;$/;"	m	struct:xlib_colormap_struct	file:
completed_extra_passes	src/util/jpeg2bmp/cdjpeg.h	/^  int completed_extra_passes;	\/* extra passes completed *\/$/;"	m	struct:cdjpeg_progress_mgr
complevel	src/util/bmp_png/bmp2png.c	/^int  complevel = 6;$/;"	v
convert_map	src/pixbuf.c	/^static cfunc convert_map[] = {$/;"	v	file:
convert_real_slow	src/pixbuf.c	/^static void convert_real_slow (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *cmap, int alpha)$/;"	f	file:
counter	src/util/bmp_png/common.c	/^static png_uint_32 counter;$/;"	v	file:
cpyftime	src/util/bmp_png/common.c	/^int cpyftime(const char *srcf, const char *dstf)$/;"	f
createWindow	src/shot.c	/^static void createWindow()$/;"	f	file:
create_save_context	src/g_save.c	/^static TiffSaveContext *create_save_context (void)$/;"	f	file:
cur_output_row	src/util/jpeg2bmp/djpeg.c	/^  JDIMENSION cur_output_row;	\/* next row# to write to virtual array *\/$/;"	m	struct:_bmp_dest_struct_	file:
data	src/util/list/list.h	/^	void *data;$/;"	m	struct:_GList
data_width	src/util/jpeg2bmp/djpeg.c	/^  JDIMENSION data_width;	\/* JSAMPLEs per row *\/$/;"	m	struct:_bmp_dest_struct_	file:
decompress_rle_bits	src/util/bmp_png/bmp2png.c	/^static const char *decompress_rle_bits(IMAGE *img, FILE *fp)$/;"	f	file:
decorations	src/shot.c	/^	uint32_t decorations;$/;"	m	struct:_mwmhints	file:
delslash	src/util/bmp_png/common.c	/^char *delslash(char *path)$/;"	f
depth	inc/g_pixbuf.h	/^	int depth;$/;"	m	struct:_GPixbuf
depth	src/g_save.c	/^	int depth;$/;"	m	struct:_IconEntry	file:
djpeg_dest_ptr	src/util/jpeg2bmp/cdjpeg.h	/^typedef struct djpeg_dest_struct * djpeg_dest_ptr;$/;"	t	typeref:struct:djpeg_dest_struct
djpeg_dest_struct	src/util/jpeg2bmp/cdjpeg.h	/^struct djpeg_dest_struct {$/;"	s
dpy	src/shot.c	/^static Display *dpy;$/;"	v	file:
elemsof	src/util/bmp_png/bmp2png.c	82;"	d	file:
envargv	src/util/bmp_png/common.c	/^char **envargv(int *argcp, char ***argvp, const char *envn)$/;"	f
err_compression	src/util/bmp_png/bmp2png.c	/^const char err_compression[] = "SKIPPED: Unknown compression type - %s\\n";$/;"	v
err_height_zero	src/util/bmp_png/bmp2png.c	/^const char err_height_zero[] = "SKIPPED: Invalid image height - %s\\n";$/;"	v
err_invalid_bpp	src/util/bmp_png/bmp2png.c	/^const char err_invalid_bpp[] = "SKIPPED: Invalid bit depth in BMP file - %s\\n";$/;"	v
err_invalid_hed	src/util/bmp_png/bmp2png.c	/^const char err_invalid_hed[] = "SKIPPED: Invalid header size in BMP file - %s\\n";$/;"	v
err_no_palette	src/util/bmp_png/bmp2png.c	/^const char err_no_palette[]  = "SKIPPED: Palette is missing - %s\\n";$/;"	v
err_not_a_bmp	src/util/bmp_png/bmp2png.c	/^const char err_not_a_bmp[]   = "SKIPPED: Not a BMP file - %s\\n";$/;"	v
err_not_a_png	src/util/bmp_png/png2bmp.c	/^const char err_not_a_png[]   = "SKIPPED: Not a PNG file - %s\\n";$/;"	v
err_outofmemory	src/util/bmp_png/bmp2png.c	/^static const char err_outofmemory[] = "SKIPPED: Out of memory - %s\\n";$/;"	v	file:
err_outofmemory	src/util/bmp_png/png2bmp.c	/^static const char err_outofmemory[] = "SKIPPED: Out of memory - %s\\n";$/;"	v	file:
err_readeof	src/util/bmp_png/bmp2png.c	/^const char err_readeof[]     = "SKIPPED: Premature end of BMP file - %s\\n";$/;"	v
err_readerr	src/util/bmp_png/bmp2png.c	/^const char err_readerr[]     = "SKIPPED: Read operation failed - %s\\n";$/;"	v
err_ropenfail	src/util/bmp_png/bmp2png.c	/^static const char err_ropenfail[]   = "SKIPPED: No such file or directory - %s\\n";$/;"	v	file:
err_ropenfail	src/util/bmp_png/png2bmp.c	/^static const char err_ropenfail[]   = "SKIPPED: No such file or directory - %s\\n";$/;"	v	file:
err_width_zero	src/util/bmp_png/bmp2png.c	/^const char err_width_zero[]  = "SKIPPED: Invalid image width - %s\\n";$/;"	v
err_wopenfail	src/util/bmp_png/bmp2png.c	/^static const char err_wopenfail[]   = "SKIPPED: Cannot create - %s\\n";$/;"	v	file:
err_wopenfail	src/util/bmp_png/png2bmp.c	/^static const char err_wopenfail[]   = "SKIPPED: Cannot create - %s\\n";$/;"	v	file:
err_writeerr	src/util/bmp_png/png2bmp.c	/^const char err_writeerr[]    = "SKIPPED: Write operation failed - %s\\n";$/;"	v
errlogfile	src/util/bmp_png/common.c	/^char errlogfile[] = ".\/p2berror.log";$/;"	v
errlogfile	src/util/bmp_png/common.c	/^char errlogfile[] = ".\\\\P2BERROR.LOG";$/;"	v
error_handler_data	src/g_save.c	/^struct error_handler_data {$/;"	s	file:
errorlog	src/util/bmp_png/common.c	/^int errorlog  = 0;		\/* -L option *\/$/;"	v
expand_trans	src/util/bmp_png/png2bmp.c	/^int expand_trans = 0;$/;"	v
feed_line	src/util/bmp_png/common.c	/^void feed_line(void)$/;"	f
fill_entry	src/g_save.c	/^static int fill_entry (IconEntry *icon, GPixbuf *pixbuf, int  hot_x, int  hot_y){$/;"	f	file:
filters	src/util/bmp_png/bmp2png.c	/^int  filters   = 0;$/;"	v
finish_output_bmp	src/util/jpeg2bmp/djpeg.c	/^static void finish_output_bmp(j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f	file:
flags	src/shot.c	/^	uint32_t flags;$/;"	m	struct:_mwmhints	file:
free_entry	src/g_save.c	/^static void free_entry (IconEntry *icon)$/;"	f	file:
free_save_context	src/g_save.c	/^static void free_save_context (TiffSaveContext *context)$/;"	f	file:
func_append	configure	/^func_append ()$/;"	f
func_arith	configure	/^func_arith ()$/;"	f
func_basename	configure	/^func_basename ()$/;"	f
func_check_version_match	ltmain.sh	/^func_check_version_match ()$/;"	f
func_config	ltmain.sh	/^func_config ()$/;"	f
func_dirname	configure	/^func_dirname ()$/;"	f
func_dirname_and_basename	configure	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_echo	ltmain.sh	/^func_echo ()$/;"	f
func_emit_cwrapperexe_src	ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper_part1	ltmain.sh	/^func_emit_wrapper_part1 ()$/;"	f
func_emit_wrapper_part2	ltmain.sh	/^func_emit_wrapper_part2 ()$/;"	f
func_enable_tag	ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	ltmain.sh	/^func_error ()$/;"	f
func_execute_cmds	ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	ltmain.sh	/^func_extract_archives ()$/;"	f
func_fatal_configuration	ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	ltmain.sh	/^func_features ()$/;"	f
func_generate_dlsyms	ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_grep	ltmain.sh	/^func_grep ()$/;"	f
func_help	ltmain.sh	/^func_help ()$/;"	f
func_infer_tag	ltmain.sh	/^func_infer_tag ()$/;"	f
func_lalib_p	ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	configure	/^func_len ()$/;"	f
func_lo2o	configure	/^func_lo2o ()$/;"	f
func_ltwrapper_executable_p	ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_opt_split	configure	/^func_opt_split ()$/;"	f
func_quote_for_eval	ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_show_eval	ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_source	ltmain.sh	/^func_source ()$/;"	f
func_stripname	configure	/^func_stripname ()$/;"	f
func_to_host_path	ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_host_pathlist	ltmain.sh	/^func_to_host_pathlist ()$/;"	f
func_usage	ltmain.sh	/^func_usage ()$/;"	f
func_verbose	ltmain.sh	/^func_verbose ()$/;"	f
func_version	ltmain.sh	/^func_version ()$/;"	f
func_warning	ltmain.sh	/^func_warning ()$/;"	f
func_win32_libid	ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	configure	/^func_xform ()$/;"	f
functions	src/shot.c	/^    uint32_t functions;$/;"	m	struct:_mwmhints	file:
g_list_append	src/util/list/list.c	/^GList *g_list_append(GList *list, void *data) {$/;"	f
g_list_foreach	src/util/list/list.c	/^void g_list_foreach (GList *list, FUNC func,void *user_data)$/;"	f
g_list_free	src/util/list/list.c	/^void g_list_free(GList *list)$/;"	f
g_list_last	src/util/list/list.c	/^static inline GList *g_list_last (GList *list) {$/;"	f	file:
g_list_length	src/util/list/list.c	/^unsigned int g_list_length(GList *list)$/;"	f
g_pixbuf_bmp_image_save	src/g_save.c	/^static int g_pixbuf_bmp_image_save(FILE *f, GPixbuf *pixbuf)$/;"	f	file:
g_pixbuf_ico_image_save	src/g_save.c	/^static int g_pixbuf_ico_image_save (FILE *f, GPixbuf *pixbuf)$/;"	f	file:
g_pixbuf_jpeg_image_save	src/g_save.c	/^static int g_pixbuf_jpeg_image_save(FILE * f, GPixbuf *pixbuf) {$/;"	f	file:
g_pixbuf_new	src/pixbuf.c	/^GPixbuf *g_pixbuf_new (int depth, int b_order, int has_alpha, int bits_per_sample, int width, int height)$/;"	f
g_pixbuf_new_from_data	src/pixbuf.c	/^GPixbuf *g_pixbuf_new_from_data (const unsigned char *data, int depth, int b_order, int has_alpha, int bits_per_sample, int width, int height, int rowstride)$/;"	f
g_pixbuf_png_image_save	src/g_save.c	/^static int g_pixbuf_png_image_save(FILE *f, GPixbuf * pixbuf) {$/;"	f	file:
g_pixbuf_save	src/g_save.c	/^int g_pixbuf_save(GPixbuf *pixbuf, FILE *fp, g_save_type type)$/;"	f
g_pixbuf_tiff_image_save	src/g_save.c	/^static int g_pixbuf_tiff_image_save(FILE * f, GPixbuf *pixbuf)$/;"	f	file:
g_pixbuf_x_get_from_drawable	src/pixbuf.c	/^GPixbuf *g_pixbuf_x_get_from_drawable (Display *dpy, Drawable src, int src_x, int src_y, int width, int height)$/;"	f
g_save_type	inc/g_pixbuf.h	/^}g_save_type;$/;"	t	typeref:enum:__anon1
grab_pointer_position	src/shot.c	/^void grab_pointer_position(int *src_x, int *src_y, int *width, int *height)$/;"	f
grab_window	src/shot.c	/^void grab_window(const char *fileName, g_save_type type)$/;"	f
grab_window_position	src/shot.c	/^void grab_window_position(int *src_x, int *src_y, int *width, int *height)$/;"	f
has_alpha	inc/g_pixbuf.h	/^    unsigned int has_alpha : 1;$/;"	m	struct:_GPixbuf
height	inc/g_pixbuf.h	/^    int width, height;$/;"	m	struct:_GPixbuf
height	src/g_save.c	/^	int height;$/;"	m	struct:_IconEntry	file:
height	src/util/bmp_png/common.h	/^	LONG    height;$/;"	m	struct:tagIMAGE
hot_x	src/g_save.c	/^	int hot_x;$/;"	m	struct:_IconEntry	file:
hot_y	src/g_save.c	/^	int hot_y;$/;"	m	struct:_IconEntry	file:
imgbuf_alloc	src/util/bmp_png/common.c	/^BOOL imgbuf_alloc(IMAGE *img)$/;"	f
imgbuf_free	src/util/bmp_png/common.c	/^void imgbuf_free(IMAGE *img)$/;"	f
imgbuf_init	src/util/bmp_png/common.c	/^void imgbuf_init(IMAGE *img)$/;"	f
imgbytes	src/util/bmp_png/common.h	/^	DWORD   imgbytes;$/;"	m	struct:tagIMAGE
inflateReset	src/util/bmp_png/bmp2png.c	/^int inflateReset(z_streamp z)$/;"	f
init_progress_bar	src/util/bmp_png/common.c	/^static void init_progress_bar(int max)$/;"	f	file:
init_progress_meter	src/util/bmp_png/common.c	/^void init_progress_meter(png_structp png_ptr, png_uint_32 width,$/;"	f
input_file	src/util/jpeg2bmp/cdjpeg.h	/^  FILE *input_file;$/;"	m	struct:cjpeg_source_struct
input_mode	src/shot.c	/^    int32_t  input_mode;$/;"	m	struct:_mwmhints	file:
interlace	src/util/bmp_png/bmp2png.c	/^int  interlace = 0;$/;"	v
is_4th_alpha	src/util/bmp_png/bmp2png.c	/^static BOOL is_4th_alpha(IMAGE *img)$/;"	f	file:
is_dos_filename	src/util/bmp_png/common.c	/^int is_dos_filename(const char *path)$/;"	f
is_os2	src/util/jpeg2bmp/djpeg.c	/^  boolean is_os2;		\/* saves the OS2 format request flag *\/$/;"	m	struct:_bmp_dest_struct_	file:
isoption	src/util/bmp_png/common.c	359;"	d	file:
jinit_read_bmp	src/util/jpeg2bmp/cdjpeg.h	106;"	d
jinit_write_bmp	src/util/jpeg2bmp/cdjpeg.h	107;"	d
jinit_write_bmp	src/util/jpeg2bmp/djpeg.c	/^static djpeg_dest_ptr jinit_write_bmp(j_decompress_ptr cinfo, boolean is_os2)$/;"	f	file:
jpg2bmp	src/util/jpeg2bmp/djpeg.c	/^int jpg2bmp(const char *in, const char *out)$/;"	f
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	config.guess	/^main ()$/;"	f
makedir	src/util/bmp_png/common.c	/^int makedir(const char *path)$/;"	f
mask_table	src/pixbuf.c	/^static unsigned int mask_table[] = {$/;"	v	file:
maxcount	src/util/bmp_png/common.c	/^static png_uint_32 maxcount;$/;"	v	file:
maxcount_adam7	src/util/bmp_png/common.c	/^ maxcount_adam7(png_uint_32 width, png_uint_32 height)$/;"	f	file:
mgetdwl	src/util/bmp_png/bmp2png.c	/^static unsigned long mgetdwl(void *ptr)$/;"	f	file:
mgetwl	src/util/bmp_png/bmp2png.c	/^static unsigned int mgetwl(void *ptr)$/;"	f	file:
mputdwl	src/util/bmp_png/png2bmp.c	/^static void mputdwl(void *ptr, unsigned long val)$/;"	f	file:
mputwl	src/util/bmp_png/png2bmp.c	/^static void mputwl(void *ptr, unsigned int val)$/;"	f	file:
my_close	src/shot.c	/^static void my_close()$/;"	f	file:
my_init	src/shot.c	/^static void my_init()$/;"	f	file:
n_channels	inc/g_pixbuf.h	/^    int n_channels;$/;"	m	struct:_GPixbuf
n_colors	src/g_save.c	/^	unsigned char n_colors;$/;"	m	struct:_IconEntry	file:
next	src/util/list/list.h	/^	struct _GList *next;$/;"	m	struct:_GList	typeref:struct:_GList::_GList
outdir	src/util/bmp_png/bmp2png.c	/^char outdir[FILENAME_MAX];$/;"	v
outdir	src/util/bmp_png/png2bmp.c	/^char outdir[FILENAME_MAX];$/;"	v
outnam	src/util/bmp_png/bmp2png.c	/^char outnam[FILENAME_MAX];$/;"	v
outnam	src/util/bmp_png/png2bmp.c	/^char outnam[FILENAME_MAX];$/;"	v
output_file	src/util/jpeg2bmp/cdjpeg.h	/^  FILE * output_file;$/;"	m	struct:djpeg_dest_struct
pad_bytes	src/util/jpeg2bmp/djpeg.c	/^  int pad_bytes;		\/* number of padding bytes needed per row *\/$/;"	m	struct:_bmp_dest_struct_	file:
palette	src/util/bmp_png/common.h	/^	PALETTE *palette;$/;"	m	struct:tagIMAGE
palnum	src/util/bmp_png/common.h	/^	UINT    palnum;$/;"	m	struct:tagIMAGE
parsearg	src/util/bmp_png/common.c	/^int parsearg(int *opt, char **arg, int argc, char **argv, char *aopts)$/;"	f
path_nextslash	src/util/bmp_png/common.c	/^char *path_nextslash(const char *path)$/;"	f
path_skiproot	src/util/bmp_png/common.c	/^char *path_skiproot(const char *path)$/;"	f
percent_done	src/util/jpeg2bmp/cdjpeg.h	/^  int percent_done;$/;"	m	struct:cdjpeg_progress_mgr
pixdepth	src/util/bmp_png/common.h	/^	UINT    pixdepth;$/;"	m	struct:tagIMAGE
pixels	inc/g_pixbuf.h	/^    unsigned char *pixels;$/;"	m	struct:_GPixbuf
png2bmp	src/util/bmp_png/png2bmp.c	/^int png2bmp(char *in, char *out)$/;"	f
png_filters	src/util/bmp_png/bmp2png.c	/^static int png_filters(const char *arg)$/;"	f	file:
png_jmpbuf	src/util/bmp_png/common.h	102;"	d
png_my_error	src/util/bmp_png/common.c	/^void png_my_error(png_structp png_ptr, png_const_charp message)$/;"	f
png_my_warning	src/util/bmp_png/common.c	/^void png_my_warning(png_structp png_ptr, png_const_charp message)$/;"	f
png_read_data_private	src/util/bmp_png/png2bmp.c	/^static void png_read_data_private (png_structp png_ptr, png_bytep data, png_size_t length)$/;"	f	file:
pos	src/g_save.c	/^        unsigned int pos;$/;"	m	struct:_TiffSaveContent	file:
print_scale	src/util/bmp_png/common.c	/^static void print_scale(void)$/;"	f	file:
print_status	src/util/bmp_png/common.c	/^static void print_status(void)$/;"	f	file:
progbar_len	src/util/bmp_png/common.c	/^static int  progbar_len   = 0;$/;"	v	file:
progbar_pos	src/util/bmp_png/common.c	/^static int  progbar_pos   = -1;$/;"	v	file:
progbar_scale	src/util/bmp_png/common.c	/^static int  progbar_scale = 0;$/;"	v	file:
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
pub	src/g_save.c	/^  struct jpeg_error_mgr pub;    \/* "public" fields *\/$/;"	m	struct:error_handler_data	typeref:struct:error_handler_data::jpeg_error_mgr	file:
pub	src/util/jpeg2bmp/cdjpeg.h	/^  struct jpeg_progress_mgr pub;	\/* fields known to JPEG library *\/$/;"	m	struct:cdjpeg_progress_mgr	typeref:struct:cdjpeg_progress_mgr::jpeg_progress_mgr
pub	src/util/jpeg2bmp/djpeg.c	/^  struct djpeg_dest_struct pub;	\/* public fields *\/$/;"	m	struct:_bmp_dest_struct_	typeref:struct:_bmp_dest_struct_::djpeg_dest_struct	file:
put16	src/g_save.c	197;"	d	file:
put32	src/g_save.c	201;"	d	file:
put_dots	src/util/bmp_png/common.c	/^static void put_dots(int dotchar, int num)$/;"	f	file:
put_gray_rows	src/util/jpeg2bmp/djpeg.c	/^static void put_gray_rows(j_decompress_ptr cinfo, djpeg_dest_ptr dinfo, JDIMENSION rows_supplied)$/;"	f	file:
put_pixel_rows	src/util/jpeg2bmp/djpeg.c	/^static void put_pixel_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo, JDIMENSION rows_supplied)$/;"	f	file:
quietmode	src/util/bmp_png/common.c	/^int quietmode = 0;		\/* -Q option *\/$/;"	v
read_bitfield_bits	src/util/bmp_png/bmp2png.c	/^static const char *read_bitfield_bits(IMAGE *img, FILE *fp, DWORD *color_mask,$/;"	f	file:
read_bmp	src/util/bmp_png/bmp2png.c	/^static BOOL read_bmp(char *fn, IMAGE *img)$/;"	f	file:
read_png	src/util/bmp_png/png2bmp.c	/^static BOOL read_png(char *fn, IMAGE *img)$/;"	f	file:
read_rgb_bits	src/util/bmp_png/bmp2png.c	/^static const char *read_rgb_bits(IMAGE *img, FILE *fp)$/;"	f	file:
removeTile	src/shot.c	/^static void removeTile()$/;"	f	file:
renbak	src/util/bmp_png/common.c	/^int renbak(const char *path)$/;"	f
rgb1	src/pixbuf.c	/^static void rgb1 (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb1a	src/pixbuf.c	/^static void rgb1a (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb555alsb	src/pixbuf.c	/^static void rgb555alsb (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb555amsb	src/pixbuf.c	/^static void rgb555amsb (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb555lsb	src/pixbuf.c	/^static void rgb555lsb (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb555msb	src/pixbuf.c	/^static void rgb555msb (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb565alsb	src/pixbuf.c	/^static void rgb565alsb (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb565amsb	src/pixbuf.c	/^static void rgb565amsb (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb565lsb	src/pixbuf.c	/^static void rgb565lsb (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb565msb	src/pixbuf.c	/^static void rgb565msb (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb8	src/pixbuf.c	/^static void rgb8 (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb888alsb	src/pixbuf.c	/^static void rgb888alsb (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb888amsb	src/pixbuf.c	/^static void rgb888amsb (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb888lsb	src/pixbuf.c	/^static void rgb888lsb (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb888msb	src/pixbuf.c	/^static void rgb888msb (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgb8a	src/pixbuf.c	/^static void rgb8a (XImage *image, unsigned char *pixels, int rowstride, xlib_colormap *colormap)$/;"	f	file:
rgbconvert	src/pixbuf.c	/^static void rgbconvert (XImage *image, unsigned char *pixels, int rowstride, int alpha, xlib_colormap *cmap)$/;"	f	file:
row_callback	src/util/bmp_png/common.c	/^void row_callback(png_structp png_ptr, png_uint_32 row, int pass)$/;"	f
row_width	src/util/jpeg2bmp/djpeg.c	/^  JDIMENSION row_width;		\/* physical width of one row in the BMP file *\/$/;"	m	struct:_bmp_dest_struct_	file:
rowbytes	src/util/bmp_png/common.h	/^	DWORD   rowbytes;$/;"	m	struct:tagIMAGE
rowptr	src/util/bmp_png/common.h	/^	BYTE    **rowptr;$/;"	m	struct:tagIMAGE
rowstride	inc/g_pixbuf.h	/^    int rowstride;$/;"	m	struct:_GPixbuf
save_to_file_cb	src/g_save.c	/^static int save_to_file_cb (const char *buf, unsigned long count,FILE *f)$/;"	f	file:
set_status	src/util/bmp_png/common.c	/^void set_status(const char *fmt, ...)$/;"	f
setjmp_buffer	src/g_save.c	/^  jmp_buf setjmp_buffer;        \/* for return to caller *\/$/;"	m	struct:error_handler_data	file:
showWindow	src/shot.c	/^static void showWindow()$/;"	f	file:
show_forever	src/shot.c	/^static void show_forever()$/;"	f	file:
show_toplevel	src/shot.c	/^static void show_toplevel()$/;"	f	file:
sigbit	src/util/bmp_png/common.h	/^	png_color_8 sigbit;$/;"	m	struct:tagIMAGE
size	src/pixbuf.c	/^	int size;$/;"	m	struct:xlib_colormap_struct	file:
skip_macbinary	src/util/bmp_png/png2bmp.c	/^static int skip_macbinary(png_structp png_ptr)$/;"	f	file:
start_output_bmp	src/util/jpeg2bmp/djpeg.c	/^static void start_output_bmp(j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f	file:
status	src/shot.c	/^    uint32_t status;$/;"	m	struct:_mwmhints	file:
status_msg	src/util/bmp_png/common.c	/^static char status_msg[128];$/;"	v	file:
suffix	src/util/bmp_png/common.c	/^char *suffix(const char *path)$/;"	f
tagIMAGE	src/util/bmp_png/common.h	/^typedef struct tagIMAGE {$/;"	s
tiff_save_close	src/g_save.c	/^static int tiff_save_close (thandle_t context)$/;"	f	file:
tiff_save_read	src/g_save.c	/^static tsize_t tiff_save_read (thandle_t handle, tdata_t buf, tsize_t size)$/;"	f	file:
tiff_save_seek	src/g_save.c	/^static toff_t tiff_save_seek (thandle_t handle, toff_t offset, int whence)$/;"	f	file:
tiff_save_size	src/g_save.c	/^static toff_t tiff_save_size (thandle_t handle)$/;"	f	file:
tiff_save_write	src/g_save.c	/^static tsize_t tiff_save_write (thandle_t handle, tdata_t buf, tsize_t size)$/;"	f	file:
to4bpp	src/util/bmp_png/png2bmp.c	/^static void to4bpp(png_structp png_ptr, png_row_infop row_info, png_bytep data)$/;"	f	file:
tokenize	src/util/bmp_png/common.c	/^int tokenize(char *buf, const char *str)$/;"	f
topdown	src/util/bmp_png/common.h	/^	BOOL    topdown;$/;"	m	struct:tagIMAGE
total_extra_passes	src/util/jpeg2bmp/cdjpeg.h	/^  int total_extra_passes;	\/* total extra *\/$/;"	m	struct:cdjpeg_progress_mgr
trans_type	src/util/bmp_png/bmp2png.c	/^int trans_type = B2P_TRANSPARENT_NONE;$/;"	v
trans_values	src/util/bmp_png/bmp2png.c	/^png_color_16 trans_values;$/;"	v
transparent_color	src/util/bmp_png/bmp2png.c	/^static int transparent_color(png_color_16p trans_values, const char *arg)$/;"	f	file:
uint32_t	src/shot.c	/^typedef unsigned int uint32_t;$/;"	t	file:
update_progress_bar	src/util/bmp_png/common.c	/^static void update_progress_bar(int num)$/;"	f	file:
usage_exit	src/util/bmp_png/png2bmp.c	/^static void usage_exit(char *argv0, int status)$/;"	f	file:
used	src/g_save.c	/^        unsigned int used;$/;"	m	struct:_TiffSaveContent	file:
visual	src/pixbuf.c	/^	Visual *visual;$/;"	m	struct:xlib_colormap_struct	file:
visual_decompose_mask	src/pixbuf.c	/^static void visual_decompose_mask (unsigned long  mask, int *shift, int *prec)$/;"	f	file:
whole_image	src/util/jpeg2bmp/djpeg.c	/^  jvirt_sarray_ptr whole_image;	\/* needed to reverse row order *\/$/;"	m	struct:_bmp_dest_struct_	file:
width	inc/g_pixbuf.h	/^    int width, height;$/;"	m	struct:_GPixbuf
width	src/g_save.c	/^	int width;$/;"	m	struct:_IconEntry	file:
width	src/util/bmp_png/common.h	/^	LONG    width;$/;"	m	struct:tagIMAGE
win	src/shot.c	/^static Window win;$/;"	v	file:
window_main_loop	src/shot.c	/^static void window_main_loop(int *src_x, int *src_y, int *dest_x, int *dest_y)$/;"	f	file:
write16	src/g_save.c	/^static int write16 (FILE   *f, unsigned short  *data, int  count)$/;"	f	file:
write32	src/g_save.c	/^static int write32 (FILE     *f, unsigned int  *data, int  count)$/;"	f	file:
write8	src/g_save.c	/^static int write8 (FILE  *f, unsigned char   *data, int      count)$/;"	f	file:
write_bmp	src/util/bmp_png/png2bmp.c	/^static BOOL write_bmp(char *fn, IMAGE *img)$/;"	f	file:
write_bmp_header	src/util/jpeg2bmp/djpeg.c	/^static void write_bmp_header(j_decompress_ptr cinfo, bmp_dest_ptr dest)$/;"	f	file:
write_colormap	src/util/jpeg2bmp/djpeg.c	/^static void write_colormap(j_decompress_ptr cinfo, bmp_dest_ptr dest, int map_colors, int map_entry_size)$/;"	f	file:
write_icon	src/g_save.c	/^static void write_icon (FILE *f, GList *entries)$/;"	f	file:
write_os2_header	src/util/jpeg2bmp/djpeg.c	/^static void write_os2_header(j_decompress_ptr cinfo, bmp_dest_ptr dest)$/;"	f	file:
write_png	src/util/bmp_png/bmp2png.c	/^BOOL write_png(char *fn, IMAGE *img)$/;"	f
write_rgb_bits	src/util/bmp_png/png2bmp.c	/^static const char *write_rgb_bits(IMAGE *img, FILE *fp)$/;"	f	file:
wrn_alphaallzero	src/util/bmp_png/bmp2png.c	/^const char wrn_alphaallzero[] =$/;"	v
wrn_imagehasalpha	src/util/bmp_png/bmp2png.c	/^const char wrn_imagehasalpha[] =$/;"	v
wrn_invalidtrans	src/util/bmp_png/bmp2png.c	/^const char wrn_invalidtrans[]   =$/;"	v
wrn_mkdirfail	src/util/bmp_png/bmp2png.c	/^static const char wrn_mkdirfail[]   =$/;"	v	file:
wrn_mkdirfail	src/util/bmp_png/png2bmp.c	/^static const char wrn_mkdirfail[]   =$/;"	v	file:
wrn_notranscolor	src/util/bmp_png/bmp2png.c	/^const char wrn_notranscolor[]   =$/;"	v
wrn_transtruecolor	src/util/bmp_png/bmp2png.c	/^const char wrn_transtruecolor[] =$/;"	v
xlib_colormap	src/pixbuf.c	/^typedef struct xlib_colormap_struct xlib_colormap;$/;"	t	typeref:struct:xlib_colormap_struct	file:
xlib_colormap_free	src/pixbuf.c	/^static void xlib_colormap_free (xlib_colormap *xc)$/;"	f	file:
xlib_colormap_struct	src/pixbuf.c	/^struct xlib_colormap_struct {$/;"	s	file:
xlib_get_colormap	src/pixbuf.c	/^static xlib_colormap *xlib_get_colormap (Display *dpy, Colormap id, Visual *visual)$/;"	f	file:
xor	src/g_save.c	/^	unsigned char *xor;$/;"	m	struct:_IconEntry	file:
xor_rowstride	src/g_save.c	/^	unsigned int xor_rowstride;$/;"	m	struct:_IconEntry	file:
xxprintf	src/util/bmp_png/common.c	/^void xxprintf(const char *fmt, ...)$/;"	f
